#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <map>
#include <utility>
#include <algorithm>
#include <stack>
#include <bitset>
#include <cmath>

/*
 * A simple struct to store a transition
 */
struct Trans
{
public:
	string event;
	int dest;
	bool obs;
	bool con;
};

/*
 * A struct to store a state
 * A state's local index (in its parent FSM) is its 
 * position in a vector of states in an FSM struct
 */
struct State
{
public:
	bool marked;
	int numTrans;
	string stateName;
	vector<Trans> transitions;
	State(string& str);
};

/*
 * A struct to store an FSM 
 */
struct FSM_struct
{
public:
	string fsmName;
	int numStates;
	int numEvents;
	vector<string> alphabet;
	vector<State> states;
	
	FSM_struct(int nS);
	void addEvent(string& str);
	int getStateIndex(string& str);
};
